@inject IGenreService service

<div class="movie">
    <h5 class="title">@Movie.Title</h5>
    <p>
        <input class="form-control" @bind="@Movie.Title" disabled="@IsDisabled" @onblur="DisableFields" />
    </p>

    <p>
        <input class="form-control" @bind="@Movie.Rating" disabled="@IsDisabled" @onblur="DisableFields" />
    </p>
    <p>
        <div>
            <select class="form-control" @bind="Movie.GenreId" disabled="@IsDisabled" @onblur="DisableFields">
                @foreach (var genre in genres)
                {
                    <option value="@genre.Id">@genre.Name</option>
                }
            </select>          
        </div>
    </p>
    <p>
        <input class="form-control" @bind="@Movie.ReleaseDate" disabled="@IsDisabled" @onblur="DisableFields" />
    </p>
    <p>
        <button class="btn btn-primary" @onclick="EditField">Edit</button>
        <button class="btn btn-primary" @onclick="() => AddMovieToCart.InvokeAsync(Movie)">Add to Cart</button>
        <button class="btn btn-purple" @onclick="() => DeleteMovie.InvokeAsync(Movie)">X</button>
        <a href="#top"></a><button class="btn btn-purple" @onclick="() => EditMovie.InvokeAsync(Movie)">Edit with form</button><a/>
    </p>
</div>



@code {
    [Parameter]
    public Movie Movie { get; set; }

    [Parameter]
    public EventCallback<Movie> DeleteMovie { get; set; }
    //eventcallback to pass movie object back to calling class

    [Parameter]
    public EventCallback<Movie> AddMovieToCart { get; set; }
    //eventcallback to pass movie object back to calling class
    [Parameter]
    public EventCallback<Movie> EditMovie { get; set; }

    private List<Genre> genres;

    public bool IsDisabled { get; set; } = true;


    protected override void OnInitialized()
    {
        genres = service.GetGenres();
    }

    private void EditField()
    {
        IsDisabled = false;
    }

    private void DisableFields()
    {
        IsDisabled = true;
    }
}


