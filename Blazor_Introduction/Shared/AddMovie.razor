@inject IGenreService service

<h3>Add Movie</h3>
@*Blazor form*@
<EditForm Model="Movie" OnValidSubmit="() => AddNewMovie.InvokeAsync(Movie)">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Title</label>
        <div>
            <InputText class="form-control" @bind-Value="Movie.Title"></InputText>
            <ValidationMessage For="() => Movie.Title" />
        </div>
        <label>Description</label>
        <div>
            <InputText class="form-control" @bind-Value="Movie.Description"></InputText>
            <ValidationMessage For="() => Movie.Description" />
        </div>
        <label>Genre</label>
        <div>
            <InputSelect class="form-control" @bind-Value="Movie.GenreId">
                @foreach (var genre in genres)
                {
                    <option value="@genre.Id">@genre.Name</option>
                }
            </InputSelect>

        </div>
        <label>Rating</label>
        <div>
            <InputNumber class="form-control" @bind-Value="Movie.Rating"></InputNumber>
            <ValidationMessage For="() => Movie.Rating" />
        </div>
        <label>Release Date</label>
        <div>
            <InputDate class="form-control" @bind-Value="Movie.ReleaseDate"></InputDate>
            <ValidationMessage For="() => Movie.ReleaseDate" />
        </div>
        <label>Is in Theatres?</label>
        <div>
            <InputCheckbox class="form-control" @bind-Value="Movie.IsInTheaters"></InputCheckbox>
            <ValidationMessage For="() => Movie.IsInTheaters" />
        </div>

        <button class="btn btn-primary" type="submit">Create Movie</button>
    </div>
</EditForm>

@code {


    [Parameter]
    public EventCallback<Movie> AddNewMovie { get; set; }
    //eventcallback to pass movie object back to calling class
    [Parameter]
    public Movie Movie { get; set; }

    private List<Genre> genres;

    protected override void OnInitialized()
    {
        Movie = new Movie();
        genres = service.GetGenres();
    }

    //public async Task CreateNewMovie()
    //{
    //    await AddNewMovie.InvokeAsync(Movie);
    //}


}
